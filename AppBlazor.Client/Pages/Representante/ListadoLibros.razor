@page "/listalibros"
@inject NavigationManager navigationManager
@inject LibroService libroService

<h3>Lista de Representante de Ventas</h3>

<div class="mt-3">
    <button class="btn btn-success" @onclick="IrARegistrar">
        Registrar nuevo Representante
    </button>
</div>

<div class="input-group mt-3 mb-3">
    <input type="text" class="form-control" placeholder="Ingrese Nombre del Representante"
    @bind-value="nombreRepresentante"
    @bind-value:event="oninput" />
    <button @onclick="buscar" class="btn btn-outline-dark" type="button">Buscar</button>
    <button @onclick="limpiar" class="btn btn-outline-danger" type="button">Limpiar</button>
</div>

@if(listaLibros!=null && listaLibros.Count!=0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id Empleado</th>
                <th>Nombre</th>
                <th>Jefe </th>
                <th>Sucursal </th>
                <th>Operaciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var libro in listaLibros)
            {
                <tr>
                    <td>@libro.NroEmpleado</td>
                    <td>@libro.Nombre</td>
                    <td>@libro.nombreJefe</td>
                    <td>@libro.nombreSucursal</td>

                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => EditarLibro(libro.NroEmpleado)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pen-fill" viewBox="0 0 16 16">
                                <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001" />
                            </svg>
                        </button>
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarLibro(libro.NroEmpleado)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

      public string nombreRepresentante { get; set; } = string.Empty;

    private void  buscar()
    {
        listaLibros= libroService.filtrarRepresentantes(nombreRepresentante);
    }
    private void  limpiar()
    {
        nombreRepresentante = "";
         listaLibros= libroService.filtrarRepresentantes(nombreRepresentante);
    }


    public class LibroFormCLS
    {
        public int idLibro { get; set; }
        public string titulo { get; set; } = string.Empty;
        public string resumen { get; set; } = string.Empty;
    }





    public List<LibroListCLS> listaLibros { get; set; } = new List<LibroListCLS>();
    protected override Task OnInitializedAsync()
    {
        libroService.OnSearch += filtrar;
        listaLibros = libroService.listarlibros();
        // listaLibros.Add(new LibroListCLS { idLibro = 1, titulo = "Cien años de soledad" });
        // listaLibros.Add(new LibroListCLS { idLibro = 2, titulo = "Don Quijote de la Mancha" });
        return base.OnInitializedAsync();
    }

    private Task filtrar(string nombre){
        listaLibros = libroService.filtrarRepresentantes(nombre);
        StateHasChanged();
        return Task.CompletedTask;
    }

    // {

    //     new LibroFormCLS { idLibro = 1, titulo = "Cien años de soledad", resumen = "Obra de Gabriel García Márquez" },

    //     new LibroFormCLS { idLibro = 2, titulo = "Don Quijote de la Mancha", resumen = "Obra de Miguel de Cervantes" },

    //     new LibroFormCLS { idLibro = 3, titulo = "El señor de los anillos", resumen = "Obra de J. R. R. Tolkien" }

    // };



    private void EditarLibro(int idLibro)

    {
        Navigation.NavigateTo($"/listalibros/editarlibro/{idLibro}");
    }

    private void EliminarLibro(int id)
    {

        libroService.eliminarLibro(id);

        listaLibros = libroService.listarlibros();
        // listaLibros.RemoveAll(l => l.idLibro == id);
       // Console.WriteLine($"El libro:  {titulo} fue eliminado.");
    }

    private void IrARegistrar()
    {
        Navigation.NavigateTo("/registrarlibro");
    }

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;
}
